# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'v*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download precompiled assets
        run: |
          get_latest_release() {
            curl --silent "https://api.github.com/repos/$1/releases/latest" | # Get latest release from GitHub api
              grep '"tag_name":' |                                            # Get tag line
              sed -E 's/.*"([^"]+)".*/\1/'                                    # Pluck JSON value
          }
          LATEST_RELEASE=$(get_latest_release "hidracloud/hidra-frontend")
          mkdir -p api/external/hidra-frontend/app/build
          cd api/external/hidra-frontend/app
          wget https://github.com/hidracloud/hidra-frontend/releases/download/$LATEST_RELEASE/hidra-frontend.tar.gz
          tar -xvzf hidra-frontend.tar.gz
      - name: 'Generate version and dependencies'
        run: |
          make versionize
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}